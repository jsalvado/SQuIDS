 /******************************************************************************
 *    This program is free software: you can redistribute it and/or modify     *
 *   it under the terms of the GNU General Public License as published by      *
 *   the Free Software Foundation, either version 3 of the License, or         *
 *   (at your option) any later version.                                       *
 *                                                                             *
 *   This program is distributed in the hope that it will be useful,           *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of            *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             *
 *   GNU General Public License for more details.                              *
 *                                                                             *
 *   You should have received a copy of the GNU General Public License         *
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.     *
 *                                                                             *   
 *   Authors:                                                                  *
 *      Carlos Arguelles (University of Wisconsin Madison)                     * 
 *         carguelles@icecube.wisc.edu                                         *
 *      Jordi Salvado (University of Wisconsin Madison)                        *
 *         jsalvado@icecube.wisc.edu                                           *
 ******************************************************************************/

(suv_rot) . components[0]+=suv.components[0];
(suv_rot) . components[1]+=(4*(2*cos(2*th12)*cos(th13)*cos(th23) - cos(del13)*sin(2*th12)*sin(2*th13)*sin(th23))*suv.components[1] - 8*cos(2*th12)*cos(th13)*sin(th23)*suv.components[2] - 16*cos(th12)*cos(th13)*sin(th12)*sin(th13)*(cos(del13)*cos(th23)*suv.components[2] + sin(del13)*(sin(th23)*suv.components[3] + cos(th23)*suv.components[6])) + sin(2*th12)*(6*cos(th23)*cos(th23)*suv.components[4] + 6*sin(2*th23)*suv.components[5] + sqrt(3)*(1 - 3*cos(2*th23))*suv.components[8]) + 4*cos(2*th12)*sin(th13)*(-2*cos(del13)*cos(2*th23)*suv.components[5] - 2*sin(del13)*suv.components[7] + cos(del13)*sin(2*th23)*(suv.components[4] - sqrt(3)*suv.components[8])) + cos(2*th13)*sin(2*th12)*(-((-3 + cos(2*th23))*suv.components[4]) + 2*cos(th23)*(-2*sin(th23)*suv.components[5] + sqrt(3)*cos(th23)*suv.components[8])))/8.;
(suv_rot) . components[2]+=(-4*(cos(del13)*cos(th23)*sin(th12)*sin(th13) + cos(th12)*(-cos(th13)*cos(th13) + cos(2*del13)*sin(th13)*sin(th13))*sin(th23))*suv.components[1] + 4*(cos(th12)*cos(th23)*(cos(th13)*cos(th13) - cos(2*del13)*sin(th13)*sin(th13)) + cos(del13)*sin(th12)*sin(th13)*sin(th23))*suv.components[2] - 2*cos(th12)*sin(2*del13)*(sin(th23)*suv.components[3] + cos(th23)*suv.components[6]) + 2*cos(th12)*cos(2*th13)*sin(2*del13)*(sin(th23)*suv.components[3] + cos(th23)*suv.components[6]) + 4*sin(del13)*sin(th12)*sin(th13)*(-(cos(th23)*suv.components[3]) + sin(th23)*suv.components[6]) + 2*cos(th13)*sin(th12)*(-2*cos(2*th23)*suv.components[5] + sin(2*th23)*(suv.components[4] - sqrt(3)*suv.components[8])) + cos(del13)*cos(th12)*sin(2*th13)*(-((-3 + cos(2*th23))*suv.components[4]) + 2*cos(th23)*(-2*sin(th23)*suv.components[5] + sqrt(3)*cos(th23)*suv.components[8])))/4.;
(suv_rot) . components[3]+=(2*cos(th13)*cos(th23)*suv.components[3] - 2*cos(th13)*sin(th23)*suv.components[6] + sin(th13)*(-2*cos(2*th23)*sin(del13)*suv.components[5] + 2*cos(del13)*suv.components[7] + sin(del13)*sin(2*th23)*(suv.components[4] - sqrt(3)*suv.components[8])))/2.;
(suv_rot) . components[4]+=(-4*(2*cos(th13)*cos(th23)*sin(2*th12) + cos(del13)*cos(2*th12)*sin(2*th13)*sin(th23))*suv.components[1] + 8*cos(th13)*sin(2*th12)*sin(th23)*suv.components[2] - 4*cos(2*th12)*sin(2*th13)*(cos(del13)*cos(th23)*suv.components[2] + sin(del13)*(sin(th23)*suv.components[3] + cos(th23)*suv.components[6])) + cos(2*th12)*(6*cos(th23)*cos(th23)*suv.components[4] + 6*sin(2*th23)*suv.components[5] + sqrt(3)*(1 - 3*cos(2*th23))*suv.components[8]) + 4*sin(2*th12)*sin(th13)*(2*cos(del13)*cos(2*th23)*suv.components[5] + 2*sin(del13)*suv.components[7] + cos(del13)*sin(2*th23)*(-suv.components[4] + sqrt(3)*suv.components[8])) + cos(2*th12)*cos(2*th13)*(-((-3 + cos(2*th23))*suv.components[4]) + 2*cos(th23)*(-2*sin(th23)*suv.components[5] + sqrt(3)*cos(th23)*suv.components[8])))/8.;
(suv_rot) . components[5]+=(cos(del13)*cos(th12)*cos(th23)*sin(th13) + sin(th12)*(cos(th13)*cos(th13) - cos(2*del13)*sin(th13)*sin(th13))*sin(th23))*suv.components[1] + (cos(th23)*sin(th12)*(cos(th13)*cos(th13) - cos(2*del13)*sin(th13)*sin(th13)) - cos(del13)*cos(th12)*sin(th13)*sin(th23))*suv.components[2] + cos(th12)*cos(th23)*sin(del13)*sin(th13)*suv.components[3] - sin(2*del13)*sin(th12)*sin(th13)*sin(th13)*sin(th23)*suv.components[3] + (3*cos(del13)*sin(th12)*sin(2*th13)*suv.components[4])/4. - (cos(del13)*cos(2*th23)*sin(th12)*sin(2*th13)*suv.components[4])/4. - cos(th12)*cos(th13)*cos(th23)*sin(th23)*suv.components[4] + cos(th12)*cos(th13)*cos(2*th23)*suv.components[5] - 2*cos(del13)*cos(th13)*cos(th23)*sin(th12)*sin(th13)*sin(th23)*suv.components[5] - cos(th23)*sin(2*del13)*sin(th12)*sin(th13)*sin(th13)*suv.components[6] - cos(th12)*sin(del13)*sin(th13)*sin(th23)*suv.components[6] + sqrt(3)*cos(del13)*cos(th13)*cos(th23)*cos(th23)*sin(th12)*sin(th13)*suv.components[8] + sqrt(3)*cos(th12)*cos(th13)*cos(th23)*sin(th23)*suv.components[8];
(suv_rot) . components[6]+=-(sin(th13)*(cos(th23)*sin(del13)*sin(th12) + cos(th12)*sin(2*del13)*sin(th13)*sin(th23))*suv.components[1]) + sin(del13)*sin(th13)*(-2*cos(del13)*cos(th12)*cos(th23)*sin(th13) + sin(th12)*sin(th23))*suv.components[2] + cos(del13)*cos(del13)*cos(th12)*(sin(th23)*suv.components[3] + cos(th23)*suv.components[6]) + cos(th12)*cos(2*th13)*sin(del13)*sin(del13)*(sin(th23)*suv.components[3] + cos(th23)*suv.components[6]) + cos(del13)*sin(th12)*sin(th13)*(cos(th23)*suv.components[3] - sin(th23)*suv.components[6]) - cos(th13)*sin(th12)*suv.components[7] + (cos(th12)*sin(del13)*sin(2*th13)*(-((-3 + cos(2*th23))*suv.components[4]) + 2*cos(th23)*(-2*sin(th23)*suv.components[5] + sqrt(3)*cos(th23)*suv.components[8])))/4.;
(suv_rot) . components[7]+=sin(th13)*(cos(th12)*cos(th23)*sin(del13) - sin(2*del13)*sin(th12)*sin(th13)*sin(th23))*suv.components[1] - sin(th13)*(cos(th23)*sin(2*del13)*sin(th12)*sin(th13) + cos(th12)*sin(del13)*sin(th23))*suv.components[2] + cos(del13)*cos(del13)*sin(th12)*(sin(th23)*suv.components[3] + cos(th23)*suv.components[6]) + cos(2*th13)*sin(del13)*sin(del13)*sin(th12)*(sin(th23)*suv.components[3] + cos(th23)*suv.components[6]) + cos(del13)*cos(th12)*sin(th13)*(-(cos(th23)*suv.components[3]) + sin(th23)*suv.components[6]) + cos(th12)*cos(th13)*suv.components[7] + (sin(del13)*sin(th12)*sin(2*th13)*(-((-3 + cos(2*th23))*suv.components[4]) + 2*cos(th23)*(-2*sin(th23)*suv.components[5] + sqrt(3)*cos(th23)*suv.components[8])))/4.;
(suv_rot) . components[8]+=(-12*cos(th13)*cos(th13)*sin(2*th23)*suv.components[5] - 12*sin(2*th13)*(cos(del13)*sin(th23)*suv.components[1] + cos(del13)*cos(th23)*suv.components[2] + sin(del13)*(sin(th23)*suv.components[3] + cos(th23)*suv.components[6])) - 6*cos(th13)*cos(th13)*cos(2*th23)*(suv.components[4] - sqrt(3)*suv.components[8]) + (-1 + 3*cos(2*th13))*(3*suv.components[4] + sqrt(3)*suv.components[8]))/(8.*sqrt(3));