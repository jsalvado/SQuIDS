 /******************************************************************************
 *    This program is free software: you can redistribute it and/or modify     *
 *   it under the terms of the GNU General Public License as published by      *
 *   the Free Software Foundation, either version 3 of the License, or         *
 *   (at your option) any later version.                                       *
 *                                                                             *
 *   This program is distributed in the hope that it will be useful,           *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of            *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             *
 *   GNU General Public License for more details.                              *
 *                                                                             *
 *   You should have received a copy of the GNU General Public License         *
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.     *
 *                                                                             *   
 *   Authors:                                                                  *
 *      Carlos Arguelles (University of Wisconsin Madison)                     * 
 *         carguelles@icecube.wisc.edu                                         *
 *      Jordi Salvado (University of Wisconsin Madison)                        *
 *         jsalvado@icecube.wisc.edu                                           *
 ******************************************************************************/

(suv_new) . components[0]+=suv2.components[0];
(suv_new) . components[1]+=cos(2*t*suv1.components[6])*suv2.components[1] + sin(2*t*suv1.components[6])*suv2.components[5];
(suv_new) . components[2]+=cos(t*(suv1.components[6] + sqrt(3)*suv1.components[12]))*suv2.components[2] + sin(t*(suv1.components[6] + sqrt(3)*suv1.components[12]))*suv2.components[10];
(suv_new) . components[3]+=cos(t*suv1.components[6] + (t*(suv1.components[12] + 2*sqrt(2)*suv1.components[18]))/sqrt(3))*suv2.components[3] + sin(t*suv1.components[6] + (t*(suv1.components[12] + 2*sqrt(2)*suv1.components[18]))/sqrt(3))*suv2.components[15];
(suv_new) . components[4]+=cos(t*suv1.components[6] + (t*suv1.components[12])/sqrt(3) + (t*suv1.components[18])/sqrt(6) + sqrt(2.5)*t*suv1.components[24])*suv2.components[4] + sin(t*suv1.components[6] + (t*suv1.components[12])/sqrt(3) + (t*suv1.components[18])/sqrt(6) + sqrt(2.5)*t*suv1.components[24])*suv2.components[20];
(suv_new) . components[5]+=-(sin(2*t*suv1.components[6])*suv2.components[1]) + cos(2*t*suv1.components[6])*suv2.components[5];
(suv_new) . components[6]+=suv2.components[6];
(suv_new) . components[7]+=cos(t*(suv1.components[6] - sqrt(3)*suv1.components[12]))*suv2.components[7] - sin(t*(suv1.components[6] - sqrt(3)*suv1.components[12]))*suv2.components[11];
(suv_new) . components[8]+=cos(t*suv1.components[6] - (t*(suv1.components[12] + 2*sqrt(2)*suv1.components[18]))/sqrt(3))*suv2.components[8] - sin(t*suv1.components[6] - (t*(suv1.components[12] + 2*sqrt(2)*suv1.components[18]))/sqrt(3))*suv2.components[16];
(suv_new) . components[9]+=cos(t*suv1.components[6] - (t*(2*sqrt(3)*suv1.components[12] + sqrt(6)*suv1.components[18] + 3*sqrt(10)*suv1.components[24]))/6.)*suv2.components[9] - sin(t*suv1.components[6] - (t*(2*sqrt(3)*suv1.components[12] + sqrt(6)*suv1.components[18] + 3*sqrt(10)*suv1.components[24]))/6.)*suv2.components[21];
(suv_new) . components[10]+=-(sin(t*(suv1.components[6] + sqrt(3)*suv1.components[12]))*suv2.components[2]) + cos(t*(suv1.components[6] + sqrt(3)*suv1.components[12]))*suv2.components[10];
(suv_new) . components[11]+=sin(t*(suv1.components[6] - sqrt(3)*suv1.components[12]))*suv2.components[7] + cos(t*(suv1.components[6] - sqrt(3)*suv1.components[12]))*suv2.components[11];
(suv_new) . components[12]+=suv2.components[12];
(suv_new) . components[13]+=cos((2*t*(suv1.components[12] - sqrt(2)*suv1.components[18]))/sqrt(3))*suv2.components[13] - sin((2*t*(suv1.components[12] - sqrt(2)*suv1.components[18]))/sqrt(3))*suv2.components[17];
(suv_new) . components[14]+=cos((t*(4*sqrt(3)*suv1.components[12] - sqrt(6)*suv1.components[18] - 3*sqrt(10)*suv1.components[24]))/6.)*suv2.components[14] - sin((t*(4*sqrt(3)*suv1.components[12] - sqrt(6)*suv1.components[18] - 3*sqrt(10)*suv1.components[24]))/6.)*suv2.components[22];
(suv_new) . components[15]+=-(sin(t*suv1.components[6] + (t*(suv1.components[12] + 2*sqrt(2)*suv1.components[18]))/sqrt(3))*suv2.components[3]) + cos(t*suv1.components[6] + (t*(suv1.components[12] + 2*sqrt(2)*suv1.components[18]))/sqrt(3))*suv2.components[15];
(suv_new) . components[16]+=sin(t*suv1.components[6] - (t*(suv1.components[12] + 2*sqrt(2)*suv1.components[18]))/sqrt(3))*suv2.components[8] + cos(t*suv1.components[6] - (t*(suv1.components[12] + 2*sqrt(2)*suv1.components[18]))/sqrt(3))*suv2.components[16];
(suv_new) . components[17]+=sin((2*t*(suv1.components[12] - sqrt(2)*suv1.components[18]))/sqrt(3))*suv2.components[13] + cos((2*t*(suv1.components[12] - sqrt(2)*suv1.components[18]))/sqrt(3))*suv2.components[17];
(suv_new) . components[18]+=suv2.components[18];
(suv_new) . components[19]+=cos(sqrt(1.5)*t*suv1.components[18] - sqrt(2.5)*t*suv1.components[24])*suv2.components[19] - sin(sqrt(1.5)*t*suv1.components[18] - sqrt(2.5)*t*suv1.components[24])*suv2.components[23];
(suv_new) . components[20]+=-(sin(t*suv1.components[6] + (t*suv1.components[12])/sqrt(3) + (t*suv1.components[18])/sqrt(6) + sqrt(2.5)*t*suv1.components[24])*suv2.components[4]) + cos(t*suv1.components[6] + (t*suv1.components[12])/sqrt(3) + (t*suv1.components[18])/sqrt(6) + sqrt(2.5)*t*suv1.components[24])*suv2.components[20];
(suv_new) . components[21]+=sin(t*suv1.components[6] - (t*(2*sqrt(3)*suv1.components[12] + sqrt(6)*suv1.components[18] + 3*sqrt(10)*suv1.components[24]))/6.)*suv2.components[9] + cos(t*suv1.components[6] - (t*(2*sqrt(3)*suv1.components[12] + sqrt(6)*suv1.components[18] + 3*sqrt(10)*suv1.components[24]))/6.)*suv2.components[21];
(suv_new) . components[22]+=sin((t*(4*sqrt(3)*suv1.components[12] - sqrt(6)*suv1.components[18] - 3*sqrt(10)*suv1.components[24]))/6.)*suv2.components[14] + cos((t*(4*sqrt(3)*suv1.components[12] - sqrt(6)*suv1.components[18] - 3*sqrt(10)*suv1.components[24]))/6.)*suv2.components[22];
(suv_new) . components[23]+=sin(sqrt(1.5)*t*suv1.components[18] - sqrt(2.5)*t*suv1.components[24])*suv2.components[19] + cos(sqrt(1.5)*t*suv1.components[18] - sqrt(2.5)*t*suv1.components[24])*suv2.components[23];
(suv_new) . components[24]+=suv2.components[24];