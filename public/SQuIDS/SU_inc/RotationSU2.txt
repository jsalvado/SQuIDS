 /******************************************************************************
 *    This program is free software: you can redistribute it and/or modify     *
 *   it under the terms of the GNU General Public License as published by      *
 *   the Free Software Foundation, either version 3 of the License, or         *
 *   (at your option) any later version.                                       *
 *                                                                             *
 *   This program is distributed in the hope that it will be useful,           *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of            *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             *
 *   GNU General Public License for more details.                              *
 *                                                                             *
 *   You should have received a copy of the GNU General Public License         *
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.     *
 *                                                                             *   
 *   Authors:                                                                  *
 *      Carlos Arguelles (University of Wisconsin Madison)                     * 
 *         carguelles@icecube.wisc.edu                                         *
 *      Jordi Salvado (University of Wisconsin Madison)                        *
 *         jsalvado@icecube.wisc.edu                                           *
 ******************************************************************************/

(suv_rot) . components[0]+=suv.components[0];
(suv_rot) . components[1]+=(cos(th12)*cos(th12) - cos(2*del12)*sin(th12)*sin(th12))*suv.components[1] + cos(del12)*(-2*sin(del12)*sin(th12)*sin(th12)*suv.components[2] + sin(2*th12)*suv.components[3]);
(suv_rot) . components[2]+=-(sin(2*del12)*sin(th12)*sin(th12)*suv.components[1]) + (cos(th12)*cos(th12) + cos(2*del12)*sin(th12)*sin(th12))*suv.components[2] + sin(del12)*sin(2*th12)*suv.components[3];
(suv_rot) . components[3]+=-(sin(2*th12)*(cos(del12)*suv.components[1] + sin(del12)*suv.components[2])) + cos(2*th12)*suv.components[3];
