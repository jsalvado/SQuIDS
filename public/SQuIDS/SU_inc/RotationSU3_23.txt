 /******************************************************************************
 *    This program is free software: you can redistribute it and/or modify     *
 *   it under the terms of the GNU General Public License as published by      *
 *   the Free Software Foundation, either version 3 of the License, or         *
 *   (at your option) any later version.                                       *
 *                                                                             *
 *   This program is distributed in the hope that it will be useful,           *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of            *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             *
 *   GNU General Public License for more details.                              *
 *                                                                             *
 *   You should have received a copy of the GNU General Public License         *
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.     *
 *                                                                             *   
 *   Authors:                                                                  *
 *      Carlos Arguelles (University of Wisconsin Madison)                     * 
 *         carguelles@icecube.wisc.edu                                         *
 *      Jordi Salvado (University of Wisconsin Madison)                        *
 *         jsalvado@icecube.wisc.edu                                           *
 ******************************************************************************/

(suv_rot) . components[0]+=suv.components[0];
(suv_rot) . components[1]+=cos(th)*suv.components[1] - sin(th)*(cos(del)*suv.components[2] + sin(del)*suv.components[6]);
(suv_rot) . components[2]+=cos(del)*sin(th)*suv.components[1] + cos(th)*suv.components[2] - sin(del)*sin(th)*suv.components[3];
(suv_rot) . components[3]+=sin(del)*sin(th)*suv.components[2] + cos(th)*suv.components[3] - cos(del)*sin(th)*suv.components[6];
(suv_rot) . components[4]+=((3 + cos(2*th))*suv.components[4] + 2*sin(th)*(2*cos(th)*(cos(del)*suv.components[5] + sin(del)*suv.components[7]) + sqrt(3)*sin(th)*suv.components[8]))/4.;
(suv_rot) . components[5]+=-(cos(del)*cos(th)*sin(th)*suv.components[4]) + (cos(th)*cos(th) - cos(2*del)*sin(th)*sin(th))*suv.components[5] + cos(del)*sin(th)*(-2*sin(del)*sin(th)*suv.components[7] + sqrt(3)*cos(th)*suv.components[8]);
(suv_rot) . components[6]+=sin(del)*sin(th)*suv.components[1] + cos(del)*sin(th)*suv.components[3] + cos(th)*suv.components[6];
(suv_rot) . components[7]+=(cos(th)*cos(th) + cos(2*del)*sin(th)*sin(th))*suv.components[7] - sin(th)*(sin(2*del)*sin(th)*suv.components[5] + cos(th)*sin(del)*(suv.components[4] - sqrt(3)*suv.components[8]));
(suv_rot) . components[8]+=(6*sin(th)*sin(th)*suv.components[4] - 6*sin(2*th)*(cos(del)*suv.components[5] + sin(del)*suv.components[7]) + sqrt(3)*(1 + 3*cos(2*th))*suv.components[8])/(4.*sqrt(3));