 /******************************************************************************
 *    This program is free software: you can redistribute it and/or modify     *
 *   it under the terms of the GNU General Public License as published by      *
 *   the Free Software Foundation, either version 3 of the License, or         *
 *   (at your option) any later version.                                       *
 *                                                                             *
 *   This program is distributed in the hope that it will be useful,           *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of            *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             *
 *   GNU General Public License for more details.                              *
 *                                                                             *
 *   You should have received a copy of the GNU General Public License         *
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.     *
 *                                                                             *   
 *   Authors:                                                                  *
 *      Carlos Arguelles (University of Wisconsin Madison)                     * 
 *         carguelles@icecube.wisc.edu                                         *
 *      Jordi Salvado (University of Wisconsin Madison)                        *
 *         jsalvado@icecube.wisc.edu                                           *
 *      Christopher Weaver (University of Wisconsin Madison)                   * 
 *         cweaver@icecube.wisc.edu                                            *
 ******************************************************************************/
(suv_new) . components[0]+=suv2.components[0];
(suv_new) . components[1]+=cos(2*t*suv1.components[7])*suv2.components[1] + sin(2*t*suv1.components[7])*suv2.components[6];
(suv_new) . components[2]+=cos(t*(suv1.components[7] + sqrt(3)*suv1.components[14]))*suv2.components[2] + sin(t*(suv1.components[7] + sqrt(3)*suv1.components[14]))*suv2.components[12];
(suv_new) . components[3]+=cos(t*suv1.components[7] + (t*(suv1.components[14] + 2*sqrt(2)*suv1.components[21]))/sqrt(3))*suv2.components[3] + sin(t*suv1.components[7] + (t*(suv1.components[14] + 2*sqrt(2)*suv1.components[21]))/sqrt(3))*suv2.components[18];
(suv_new) . components[4]+=cos(t*suv1.components[7] + (t*suv1.components[14])/sqrt(3) + (t*suv1.components[21])/sqrt(6) + sqrt(2.5)*t*suv1.components[28])*suv2.components[4] + sin(t*suv1.components[7] + (t*suv1.components[14])/sqrt(3) + (t*suv1.components[21])/sqrt(6) + sqrt(2.5)*t*suv1.components[28])*suv2.components[24];
(suv_new) . components[5]+=cos(t*suv1.components[7] + (t*suv1.components[14])/sqrt(3) + (t*suv1.components[21])/sqrt(6) + (t*suv1.components[28])/sqrt(10) + 2*sqrt(0.6)*t*suv1.components[35])*suv2.components[5] + sin(t*suv1.components[7] + (t*suv1.components[14])/sqrt(3) + (t*suv1.components[21])/sqrt(6) + (t*suv1.components[28])/sqrt(10) + 2*sqrt(0.6)*t*suv1.components[35])*suv2.components[30];
(suv_new) . components[6]+=-(sin(2*t*suv1.components[7])*suv2.components[1]) + cos(2*t*suv1.components[7])*suv2.components[6];
(suv_new) . components[7]+=suv2.components[7];
(suv_new) . components[8]+=cos(t*(suv1.components[7] - sqrt(3)*suv1.components[14]))*suv2.components[8] - sin(t*(suv1.components[7] - sqrt(3)*suv1.components[14]))*suv2.components[13];
(suv_new) . components[9]+=cos(t*suv1.components[7] - (t*(suv1.components[14] + 2*sqrt(2)*suv1.components[21]))/sqrt(3))*suv2.components[9] - sin(t*suv1.components[7] - (t*(suv1.components[14] + 2*sqrt(2)*suv1.components[21]))/sqrt(3))*suv2.components[19];
(suv_new) . components[10]+=cos(t*suv1.components[7] - (t*(2*sqrt(3)*suv1.components[14] + sqrt(6)*suv1.components[21] + 3*sqrt(10)*suv1.components[28]))/6.)*suv2.components[10] - sin(t*suv1.components[7] - (t*(2*sqrt(3)*suv1.components[14] + sqrt(6)*suv1.components[21] + 3*sqrt(10)*suv1.components[28]))/6.)*suv2.components[25];
(suv_new) . components[11]+=cos(t*suv1.components[7] - (t*(10*sqrt(3)*suv1.components[14] + 5*sqrt(6)*suv1.components[21] + 3*sqrt(10)*suv1.components[28] + 12*sqrt(15)*suv1.components[35]))/30.)*suv2.components[11] - sin(t*suv1.components[7] - (t*(10*sqrt(3)*suv1.components[14] + 5*sqrt(6)*suv1.components[21] + 3*sqrt(10)*suv1.components[28] + 12*sqrt(15)*suv1.components[35]))/30.)*suv2.components[31];
(suv_new) . components[12]+=-(sin(t*(suv1.components[7] + sqrt(3)*suv1.components[14]))*suv2.components[2]) + cos(t*(suv1.components[7] + sqrt(3)*suv1.components[14]))*suv2.components[12];
(suv_new) . components[13]+=sin(t*(suv1.components[7] - sqrt(3)*suv1.components[14]))*suv2.components[8] + cos(t*(suv1.components[7] - sqrt(3)*suv1.components[14]))*suv2.components[13];
(suv_new) . components[14]+=suv2.components[14];
(suv_new) . components[15]+=cos((2*t*(suv1.components[14] - sqrt(2)*suv1.components[21]))/sqrt(3))*suv2.components[15] - sin((2*t*(suv1.components[14] - sqrt(2)*suv1.components[21]))/sqrt(3))*suv2.components[20];
(suv_new) . components[16]+=cos((t*(4*sqrt(3)*suv1.components[14] - sqrt(6)*suv1.components[21] - 3*sqrt(10)*suv1.components[28]))/6.)*suv2.components[16] - sin((t*(4*sqrt(3)*suv1.components[14] - sqrt(6)*suv1.components[21] - 3*sqrt(10)*suv1.components[28]))/6.)*suv2.components[26];
(suv_new) . components[17]+=cos((2*t*suv1.components[14])/sqrt(3) - (t*suv1.components[21])/sqrt(6) - (t*suv1.components[28])/sqrt(10) - 2*sqrt(0.6)*t*suv1.components[35])*suv2.components[17] - sin((2*t*suv1.components[14])/sqrt(3) - (t*suv1.components[21])/sqrt(6) - (t*suv1.components[28])/sqrt(10) - 2*sqrt(0.6)*t*suv1.components[35])*suv2.components[32];
(suv_new) . components[18]+=-(sin(t*suv1.components[7] + (t*(suv1.components[14] + 2*sqrt(2)*suv1.components[21]))/sqrt(3))*suv2.components[3]) + cos(t*suv1.components[7] + (t*(suv1.components[14] + 2*sqrt(2)*suv1.components[21]))/sqrt(3))*suv2.components[18];
(suv_new) . components[19]+=sin(t*suv1.components[7] - (t*(suv1.components[14] + 2*sqrt(2)*suv1.components[21]))/sqrt(3))*suv2.components[9] + cos(t*suv1.components[7] - (t*(suv1.components[14] + 2*sqrt(2)*suv1.components[21]))/sqrt(3))*suv2.components[19];
(suv_new) . components[20]+=sin((2*t*(suv1.components[14] - sqrt(2)*suv1.components[21]))/sqrt(3))*suv2.components[15] + cos((2*t*(suv1.components[14] - sqrt(2)*suv1.components[21]))/sqrt(3))*suv2.components[20];
(suv_new) . components[21]+=suv2.components[21];
(suv_new) . components[22]+=cos(sqrt(1.5)*t*suv1.components[21] - sqrt(2.5)*t*suv1.components[28])*suv2.components[22] - sin(sqrt(1.5)*t*suv1.components[21] - sqrt(2.5)*t*suv1.components[28])*suv2.components[27];
(suv_new) . components[23]+=cos(sqrt(1.5)*t*suv1.components[21] - (t*suv1.components[28])/sqrt(10) - 2*sqrt(0.6)*t*suv1.components[35])*suv2.components[23] - sin(sqrt(1.5)*t*suv1.components[21] - (t*suv1.components[28])/sqrt(10) - 2*sqrt(0.6)*t*suv1.components[35])*suv2.components[33];
(suv_new) . components[24]+=-(sin(t*suv1.components[7] + (t*suv1.components[14])/sqrt(3) + (t*suv1.components[21])/sqrt(6) + sqrt(2.5)*t*suv1.components[28])*suv2.components[4]) + cos(t*suv1.components[7] + (t*suv1.components[14])/sqrt(3) + (t*suv1.components[21])/sqrt(6) + sqrt(2.5)*t*suv1.components[28])*suv2.components[24];
(suv_new) . components[25]+=sin(t*suv1.components[7] - (t*(2*sqrt(3)*suv1.components[14] + sqrt(6)*suv1.components[21] + 3*sqrt(10)*suv1.components[28]))/6.)*suv2.components[10] + cos(t*suv1.components[7] - (t*(2*sqrt(3)*suv1.components[14] + sqrt(6)*suv1.components[21] + 3*sqrt(10)*suv1.components[28]))/6.)*suv2.components[25];
(suv_new) . components[26]+=sin((t*(4*sqrt(3)*suv1.components[14] - sqrt(6)*suv1.components[21] - 3*sqrt(10)*suv1.components[28]))/6.)*suv2.components[16] + cos((t*(4*sqrt(3)*suv1.components[14] - sqrt(6)*suv1.components[21] - 3*sqrt(10)*suv1.components[28]))/6.)*suv2.components[26];
(suv_new) . components[27]+=sin(sqrt(1.5)*t*suv1.components[21] - sqrt(2.5)*t*suv1.components[28])*suv2.components[22] + cos(sqrt(1.5)*t*suv1.components[21] - sqrt(2.5)*t*suv1.components[28])*suv2.components[27];
(suv_new) . components[28]+=suv2.components[28];
(suv_new) . components[29]+=cos(2*sqrt(0.4)*t*suv1.components[28] - 2*sqrt(0.6)*t*suv1.components[35])*suv2.components[29] - sin(2*sqrt(0.4)*t*suv1.components[28] - 2*sqrt(0.6)*t*suv1.components[35])*suv2.components[34];
(suv_new) . components[30]+=-(sin(t*suv1.components[7] + (t*suv1.components[14])/sqrt(3) + (t*suv1.components[21])/sqrt(6) + (t*suv1.components[28])/sqrt(10) + 2*sqrt(0.6)*t*suv1.components[35])*suv2.components[5]) + cos(t*suv1.components[7] + (t*suv1.components[14])/sqrt(3) + (t*suv1.components[21])/sqrt(6) + (t*suv1.components[28])/sqrt(10) + 2*sqrt(0.6)*t*suv1.components[35])*suv2.components[30];
(suv_new) . components[31]+=sin(t*suv1.components[7] - (t*(10*sqrt(3)*suv1.components[14] + 5*sqrt(6)*suv1.components[21] + 3*sqrt(10)*suv1.components[28] + 12*sqrt(15)*suv1.components[35]))/30.)*suv2.components[11] + cos(t*suv1.components[7] - (t*(10*sqrt(3)*suv1.components[14] + 5*sqrt(6)*suv1.components[21] + 3*sqrt(10)*suv1.components[28] + 12*sqrt(15)*suv1.components[35]))/30.)*suv2.components[31];
(suv_new) . components[32]+=sin((2*t*suv1.components[14])/sqrt(3) - (t*suv1.components[21])/sqrt(6) - (t*suv1.components[28])/sqrt(10) - 2*sqrt(0.6)*t*suv1.components[35])*suv2.components[17] + cos((2*t*suv1.components[14])/sqrt(3) - (t*suv1.components[21])/sqrt(6) - (t*suv1.components[28])/sqrt(10) - 2*sqrt(0.6)*t*suv1.components[35])*suv2.components[32];
(suv_new) . components[33]+=sin(sqrt(1.5)*t*suv1.components[21] - (t*suv1.components[28])/sqrt(10) - 2*sqrt(0.6)*t*suv1.components[35])*suv2.components[23] + cos(sqrt(1.5)*t*suv1.components[21] - (t*suv1.components[28])/sqrt(10) - 2*sqrt(0.6)*t*suv1.components[35])*suv2.components[33];
(suv_new) . components[34]+=sin(2*sqrt(0.4)*t*suv1.components[28] - 2*sqrt(0.6)*t*suv1.components[35])*suv2.components[29] + cos(2*sqrt(0.4)*t*suv1.components[28] - 2*sqrt(0.6)*t*suv1.components[35])*suv2.components[34];
(suv_new) . components[35]+=suv2.components[35];