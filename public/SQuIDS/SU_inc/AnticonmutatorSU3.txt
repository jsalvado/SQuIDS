 /******************************************************************************
 *    This program is free software: you can redistribute it and/or modify     *
 *   it under the terms of the GNU General Public License as published by      *
 *   the Free Software Foundation, either version 3 of the License, or         *
 *   (at your option) any later version.                                       *
 *                                                                             *
 *   This program is distributed in the hope that it will be useful,           *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of            *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             *
 *   GNU General Public License for more details.                              *
 *                                                                             *
 *   You should have received a copy of the GNU General Public License         *
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.     *
 *                                                                             *   
 *   Authors:                                                                  *
 *      Carlos Arguelles (University of Wisconsin Madison)                     * 
 *         carguelles@icecube.wisc.edu                                         *
 *      Jordi Salvado (University of Wisconsin Madison)                        *
 *         jsalvado@icecube.wisc.edu                                           *
 ******************************************************************************/

(suv_new) . components[0]+=(2*(3*suv1.components[0]*suv2.components[0] + 2*(suv1.components[1]*suv2.components[1] + suv1.components[2]*suv2.components[2] + suv1.components[3]*suv2.components[3] + suv1.components[4]*suv2.components[4] + suv1.components[5]*suv2.components[5] + suv1.components[6]*suv2.components[6] + suv1.components[7]*suv2.components[7] + suv1.components[8]*suv2.components[8])))/3.;
(suv_new) . components[1]+=2*suv1.components[0]*suv2.components[1] + (2*suv1.components[8]*suv2.components[1])/sqrt(3) + suv1.components[5]*suv2.components[2] + suv1.components[2]*suv2.components[5] + suv1.components[7]*suv2.components[6] + suv1.components[6]*suv2.components[7] + suv1.components[1]*(2*suv2.components[0] + (2*suv2.components[8])/sqrt(3));
(suv_new) . components[2]+=suv1.components[5]*suv2.components[1] + ((6*suv1.components[0] + 3*suv1.components[4] - sqrt(3)*suv1.components[8])*suv2.components[2])/3. - suv1.components[7]*suv2.components[3] + suv1.components[1]*suv2.components[5] - suv1.components[3]*suv2.components[7] + suv1.components[2]*(2*suv2.components[0] + suv2.components[4] - suv2.components[8]/sqrt(3));
(suv_new) . components[3]+=-(suv1.components[7]*suv2.components[2]) + 2*suv1.components[0]*suv2.components[3] + (2*suv1.components[8]*suv2.components[3])/sqrt(3) + suv1.components[6]*suv2.components[5] + suv1.components[5]*suv2.components[6] - suv1.components[2]*suv2.components[7] + suv1.components[3]*(2*suv2.components[0] + (2*suv2.components[8])/sqrt(3));
(suv_new) . components[4]+=suv1.components[2]*suv2.components[2] + 2*suv1.components[0]*suv2.components[4] + (2*suv1.components[8]*suv2.components[4])/sqrt(3) - suv1.components[5]*suv2.components[5] + suv1.components[6]*suv2.components[6] - suv1.components[7]*suv2.components[7] + suv1.components[4]*(2*suv2.components[0] + (2*suv2.components[8])/sqrt(3));
(suv_new) . components[5]+=suv1.components[2]*suv2.components[1] + suv1.components[1]*suv2.components[2] + suv1.components[6]*suv2.components[3] + ((6*suv1.components[0] - 3*suv1.components[4] - sqrt(3)*suv1.components[8])*suv2.components[5])/3. + suv1.components[3]*suv2.components[6] + suv1.components[5]*(2*suv2.components[0] - suv2.components[4] - suv2.components[8]/sqrt(3));
(suv_new) . components[6]+=suv1.components[7]*suv2.components[1] + suv1.components[5]*suv2.components[3] + suv1.components[3]*suv2.components[5] + ((6*suv1.components[0] + 3*suv1.components[4] - sqrt(3)*suv1.components[8])*suv2.components[6])/3. + suv1.components[1]*suv2.components[7] + suv1.components[6]*(2*suv2.components[0] + suv2.components[4] - suv2.components[8]/sqrt(3));
(suv_new) . components[7]+=suv1.components[6]*suv2.components[1] - suv1.components[3]*suv2.components[2] - suv1.components[2]*suv2.components[3] + suv1.components[1]*suv2.components[6] + ((6*suv1.components[0] - 3*suv1.components[4] - sqrt(3)*suv1.components[8])*suv2.components[7])/3. + suv1.components[7]*(2*suv2.components[0] - suv2.components[4] - suv2.components[8]/sqrt(3));
(suv_new) . components[8]+=(2*suv1.components[1]*suv2.components[1] - suv1.components[2]*suv2.components[2] + 2*suv1.components[3]*suv2.components[3] + 2*suv1.components[4]*suv2.components[4] - suv1.components[5]*suv2.components[5] - suv1.components[6]*suv2.components[6] - suv1.components[7]*suv2.components[7] + 2*suv1.components[8]*(sqrt(3)*suv2.components[0] - suv2.components[8]) + 2*sqrt(3)*suv1.components[0]*suv2.components[8])/sqrt(3);