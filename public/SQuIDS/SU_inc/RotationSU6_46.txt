 /******************************************************************************
 *    This program is free software: you can redistribute it and/or modify     *
 *   it under the terms of the GNU General Public License as published by      *
 *   the Free Software Foundation, either version 3 of the License, or         *
 *   (at your option) any later version.                                       *
 *                                                                             *
 *   This program is distributed in the hope that it will be useful,           *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of            *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             *
 *   GNU General Public License for more details.                              *
 *                                                                             *
 *   You should have received a copy of the GNU General Public License         *
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.     *
 *                                                                             *   
 *   Authors:                                                                  *
 *      Carlos Arguelles (University of Wisconsin Madison)                     * 
 *         carguelles@icecube.wisc.edu                                         *
 *      Jordi Salvado (University of Wisconsin Madison)                        *
 *         jsalvado@icecube.wisc.edu                                           *
 *      Christopher Weaver (University of Wisconsin Madison)                   * 
 *         cweaver@icecube.wisc.edu                                            *
 ******************************************************************************/
(suv_rot) . components[0]+=suv.components[0];
(suv_rot) . components[1]+=suv.components[1];
(suv_rot) . components[2]+=suv.components[2];
(suv_rot) . components[3]+=cos(th)*suv.components[3] - sin(th)*(cos(del)*suv.components[5] + sin(del)*suv.components[30]);
(suv_rot) . components[4]+=suv.components[4];
(suv_rot) . components[5]+=cos(del)*sin(th)*suv.components[3] + cos(th)*suv.components[5] - sin(del)*sin(th)*suv.components[18];
(suv_rot) . components[6]+=suv.components[6];
(suv_rot) . components[7]+=suv.components[7];
(suv_rot) . components[8]+=suv.components[8];
(suv_rot) . components[9]+=cos(th)*suv.components[9] - sin(th)*(cos(del)*suv.components[11] + sin(del)*suv.components[31]);
(suv_rot) . components[10]+=suv.components[10];
(suv_rot) . components[11]+=cos(del)*sin(th)*suv.components[9] + cos(th)*suv.components[11] - sin(del)*sin(th)*suv.components[19];
(suv_rot) . components[12]+=suv.components[12];
(suv_rot) . components[13]+=suv.components[13];
(suv_rot) . components[14]+=suv.components[14];
(suv_rot) . components[15]+=cos(th)*suv.components[15] - sin(th)*(cos(del)*suv.components[17] + sin(del)*suv.components[32]);
(suv_rot) . components[16]+=suv.components[16];
(suv_rot) . components[17]+=cos(del)*sin(th)*suv.components[15] + cos(th)*suv.components[17] - sin(del)*sin(th)*suv.components[20];
(suv_rot) . components[18]+=sin(del)*sin(th)*suv.components[5] + cos(th)*suv.components[18] - cos(del)*sin(th)*suv.components[30];
(suv_rot) . components[19]+=sin(del)*sin(th)*suv.components[11] + cos(th)*suv.components[19] - cos(del)*sin(th)*suv.components[31];
(suv_rot) . components[20]+=sin(del)*sin(th)*suv.components[17] + cos(th)*suv.components[20] - cos(del)*sin(th)*suv.components[32];
(suv_rot) . components[21]+=(5*(5 + 3*cos(2*th))*suv.components[21] + 2*sin(th)*(sqrt(15)*sin(th)*suv.components[28] + 10*sqrt(6)*cos(th)*(cos(del)*suv.components[23] + sin(del)*suv.components[33]) + 6*sqrt(10)*sin(th)*suv.components[35]))/40.;
(suv_rot) . components[22]+=cos(th)*suv.components[22] - sin(th)*(cos(del)*suv.components[29] + sin(del)*suv.components[34]);
(suv_rot) . components[23]+=sin(del)*(sin(del)*suv.components[23] - cos(del)*suv.components[33]) + cos(del)*cos(2*th)*(cos(del)*suv.components[23] + sin(del)*suv.components[33]) + (cos(del)*sin(2*th)*(-5*sqrt(6)*suv.components[21] + sqrt(10)*suv.components[28] + 4*sqrt(15)*suv.components[35]))/20.;
(suv_rot) . components[24]+=suv.components[24];
(suv_rot) . components[25]+=suv.components[25];
(suv_rot) . components[26]+=suv.components[26];
(suv_rot) . components[27]+=cos(th)*suv.components[27] + sin(th)*(-(sin(del)*suv.components[29]) + cos(del)*suv.components[34]);
(suv_rot) . components[28]+=(10*sqrt(6)*sin(th)*sin(th)*suv.components[21] + sqrt(10)*(39 + cos(2*th))*suv.components[28] - 20*sin(2*th)*(cos(del)*suv.components[23] + sin(del)*suv.components[33]) - 8*sqrt(15)*sin(th)*sin(th)*suv.components[35])/(40.*sqrt(10));
(suv_rot) . components[29]+=cos(del)*sin(th)*suv.components[22] + sin(del)*sin(th)*suv.components[27] + cos(th)*suv.components[29];
(suv_rot) . components[30]+=sin(del)*sin(th)*suv.components[3] + cos(del)*sin(th)*suv.components[18] + cos(th)*suv.components[30];
(suv_rot) . components[31]+=sin(del)*sin(th)*suv.components[9] + cos(del)*sin(th)*suv.components[19] + cos(th)*suv.components[31];
(suv_rot) . components[32]+=sin(del)*sin(th)*suv.components[15] + cos(del)*sin(th)*suv.components[20] + cos(th)*suv.components[32];
(suv_rot) . components[33]+=-(sin(2*del)*sin(th)*sin(th)*suv.components[23]) + cos(th)*cos(th)*suv.components[33] + cos(2*del)*sin(th)*sin(th)*suv.components[33] + (sin(del)*sin(2*th)*(-5*sqrt(6)*suv.components[21] + sqrt(10)*suv.components[28] + 4*sqrt(15)*suv.components[35]))/20.;
(suv_rot) . components[34]+=sin(del)*sin(th)*suv.components[22] - cos(del)*sin(th)*suv.components[27] + cos(th)*suv.components[34];
(suv_rot) . components[35]+=(30*sqrt(6)*sin(th)*sin(th)*suv.components[21] - 6*sqrt(10)*sin(th)*sin(th)*suv.components[28] - 60*sin(2*th)*(cos(del)*suv.components[23] + sin(del)*suv.components[33]) + 4*sqrt(15)*(2 + 3*cos(2*th))*suv.components[35])/(20.*sqrt(15));